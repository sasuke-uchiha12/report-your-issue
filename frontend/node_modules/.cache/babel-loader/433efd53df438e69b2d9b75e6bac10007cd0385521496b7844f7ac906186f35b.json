{"ast":null,"code":"var _jsxFileName = \"D:\\\\Creative and innovative project\\\\report-your-issue\\\\src\\\\component\\\\Dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\n// AdminDashboard.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [complaints, setComplaints] = useState([]);\n\n  // Function to assign workers and change status\n  const assignWorkerAndChangeStatus = (complaintId, assignedWorker, status) => {\n    // Find the complaint by ID and update its assignedWorker and status\n    const updatedComplaints = complaints.map(complaint => {\n      if (complaint.id === complaintId) {\n        return {\n          ...complaint,\n          assignedWorker,\n          status\n        };\n      }\n      return complaint;\n    });\n\n    // Update the state with the modified complaints array\n    setComplaints(updatedComplaints);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"5PN/eltch3M08wVd59EeckddA1Y=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminDashboard","_s","complaints","setComplaints","assignWorkerAndChangeStatus","complaintId","assignedWorker","status","updatedComplaints","map","complaint","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Creative and innovative project/report-your-issue/src/component/Dashboard/AdminDashboard.js"],"sourcesContent":["// AdminDashboard.js\r\nimport React, { useState } from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n    const [complaints, setComplaints] = useState([]);\r\n\r\n    // Function to assign workers and change status\r\n    const assignWorkerAndChangeStatus = (complaintId, assignedWorker, status) => {\r\n        // Find the complaint by ID and update its assignedWorker and status\r\n        const updatedComplaints = complaints.map(complaint => {\r\n            if (complaint.id === complaintId) {\r\n                return {\r\n                    ...complaint,\r\n                    assignedWorker,\r\n                    status\r\n                };\r\n            }\r\n            return complaint;\r\n        });\r\n\r\n        // Update the state with the modified complaints array\r\n        setComplaints(updatedComplaints);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Display complaints, workers, and status */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMO,2BAA2B,GAAGA,CAACC,WAAW,EAAEC,cAAc,EAAEC,MAAM,KAAK;IACzE;IACA,MAAMC,iBAAiB,GAAGN,UAAU,CAACO,GAAG,CAACC,SAAS,IAAI;MAClD,IAAIA,SAAS,CAACC,EAAE,KAAKN,WAAW,EAAE;QAC9B,OAAO;UACH,GAAGK,SAAS;UACZJ,cAAc;UACdC;QACJ,CAAC;MACL;MACA,OAAOG,SAAS;IACpB,CAAC,CAAC;;IAEF;IACAP,aAAa,CAACK,iBAAiB,CAAC;EACpC,CAAC;EAED,oBACIT,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd,CAAC;AAAAd,EAAA,CA1BKD,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}