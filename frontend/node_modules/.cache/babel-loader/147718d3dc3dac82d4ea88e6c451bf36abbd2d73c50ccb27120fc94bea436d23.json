{"ast":null,"code":"// // import React from 'react';\n// // import '../css/ComplaintsTable.css';\n\n// // const ComplaintsTable = ({ complaints, markAsDone }) => {\n// //     return (\n// //         <table className=\"complaints-table\">\n// //             <thead>\n// //                 <tr>\n// //                     {/* <th>Identifier</th> */}\n// //                     <th>Title</th>\n// //                     <th>Issue</th>\n// //                     <th>Location</th>\n// //                     <th>Assigned Worker</th>\n// //                     <th>Status</th>\n// //                     <th>Actions</th> \n// //                 </tr>\n// //             </thead>\n// //             <tbody>\n// //                 {complaints.map((complaint, index) => (\n// //                     <tr key={index}>\n// //                         {/* <td>{complaint.identifier}</td> */}\n// //                         <td>{complaint.title}</td>\n// //                         <td>{complaint.issue}</td>\n// //                         <td>{complaint.location}</td>\n// //                         <td>{complaint.assignedWorker}</td>\n// //                         <td>{complaint.status}</td>\n// //                         <td>\n// //                             {complaint.status === 'In Progress' && (\n// //                                 <button onClick={() => markAsDone(index)}>Mark as Done</button>\n// //                             )}\n// //                         </td>\n// //                     </tr>\n// //                 ))}\n// //             </tbody>\n// //         </table>\n// //     );\n// // };\n\n// // export default ComplaintsTable;\n\n// import React, { useState } from 'react';\n// import '../css/ComplaintsTable.css';\n\n// const ComplaintsTable = ({ complaints, markAsDone }) => {\n//     const [sortedComplaints, setSortedComplaints] = useState(complaints);\n//     const [dropdownVisible, setDropdownVisible] = useState(false);\n\n//     const toggleDropdown = () => {\n//         setDropdownVisible(!dropdownVisible);\n//     };\n\n//     const sortComplaints = (criteria) => {\n//         const now = new Date();\n//         const sorted = [...complaints].sort((a, b) => {\n//             const dateA = new Date(a.date);\n//             const dateB = new Date(b.date);\n\n//             if (criteria === 'week') {\n//                 // Sort by week (last 7 days)\n//                 return now - dateA <= 7 * 24 * 60 * 60 * 1000\n//                     ? now - dateB <= 7 * 24 * 60 * 60 * 1000 ? dateA - dateB : -1\n//                     : 1;\n//             } else if (criteria === 'month') {\n//                 // Sort by month (last 30 days)\n//                 return now - dateA <= 30 * 24 * 60 * 60 * 1000\n//                     ? now - dateB <= 30 * 24 * 60 * 60 * 1000 ? dateA - dateB : -1\n//                     : 1;\n//             } else {\n//                 return dateA - dateB;\n//             }\n//         });\n//         setSortedComplaints(sorted);\n//         setDropdownVisible(false);\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"table-header\">\n//                 <div className=\"dropdown\">\n//                     <button onClick={toggleDropdown}>Sort</button>\n//                     {dropdownVisible && (\n//                         <div className=\"dropdown-menu\">\n//                             <div className=\"dropdown-item\" onClick={() => sortComplaints('week')}>Week</div>\n//                             <div className=\"dropdown-item\" onClick={() => sortComplaints('month')}>Month</div>\n//                         </div>\n//                     )}\n//                 </div>\n//             </div>\n//             <table className=\"complaints-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>Title</th>\n//                         <th>Issue</th>\n//                         <th>Location</th>\n//                         <th>Assigned Worker</th>\n//                         <th>Status</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {sortedComplaints.map((complaint, index) => (\n//                         <tr key={index}>\n//                             <td>{complaint.title}</td>\n//                             <td>{complaint.issue}</td>\n//                             <td>{complaint.location}</td>\n//                             <td>{complaint.assignedWorker}</td>\n//                             <td>{complaint.status}</td>\n//                             <td>\n//                                 {complaint.status === 'In Progress' && (\n//                                     <button onClick={() => markAsDone(index)}>Mark as Done</button>\n//                                 )}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default ComplaintsTable;","map":{"version":3,"names":[],"sources":["D:/Creative and innovative project/report-your-issue/frontend/src/component/ComplaintsTable.js"],"sourcesContent":["// // import React from 'react';\r\n// // import '../css/ComplaintsTable.css';\r\n\r\n// // const ComplaintsTable = ({ complaints, markAsDone }) => {\r\n// //     return (\r\n// //         <table className=\"complaints-table\">\r\n// //             <thead>\r\n// //                 <tr>\r\n// //                     {/* <th>Identifier</th> */}\r\n// //                     <th>Title</th>\r\n// //                     <th>Issue</th>\r\n// //                     <th>Location</th>\r\n// //                     <th>Assigned Worker</th>\r\n// //                     <th>Status</th>\r\n// //                     <th>Actions</th> \r\n// //                 </tr>\r\n// //             </thead>\r\n// //             <tbody>\r\n// //                 {complaints.map((complaint, index) => (\r\n// //                     <tr key={index}>\r\n// //                         {/* <td>{complaint.identifier}</td> */}\r\n// //                         <td>{complaint.title}</td>\r\n// //                         <td>{complaint.issue}</td>\r\n// //                         <td>{complaint.location}</td>\r\n// //                         <td>{complaint.assignedWorker}</td>\r\n// //                         <td>{complaint.status}</td>\r\n// //                         <td>\r\n// //                             {complaint.status === 'In Progress' && (\r\n// //                                 <button onClick={() => markAsDone(index)}>Mark as Done</button>\r\n// //                             )}\r\n// //                         </td>\r\n// //                     </tr>\r\n// //                 ))}\r\n// //             </tbody>\r\n// //         </table>\r\n// //     );\r\n// // };\r\n\r\n// // export default ComplaintsTable;\r\n\r\n// import React, { useState } from 'react';\r\n// import '../css/ComplaintsTable.css';\r\n\r\n// const ComplaintsTable = ({ complaints, markAsDone }) => {\r\n//     const [sortedComplaints, setSortedComplaints] = useState(complaints);\r\n//     const [dropdownVisible, setDropdownVisible] = useState(false);\r\n\r\n//     const toggleDropdown = () => {\r\n//         setDropdownVisible(!dropdownVisible);\r\n//     };\r\n\r\n//     const sortComplaints = (criteria) => {\r\n//         const now = new Date();\r\n//         const sorted = [...complaints].sort((a, b) => {\r\n//             const dateA = new Date(a.date);\r\n//             const dateB = new Date(b.date);\r\n\r\n//             if (criteria === 'week') {\r\n//                 // Sort by week (last 7 days)\r\n//                 return now - dateA <= 7 * 24 * 60 * 60 * 1000\r\n//                     ? now - dateB <= 7 * 24 * 60 * 60 * 1000 ? dateA - dateB : -1\r\n//                     : 1;\r\n//             } else if (criteria === 'month') {\r\n//                 // Sort by month (last 30 days)\r\n//                 return now - dateA <= 30 * 24 * 60 * 60 * 1000\r\n//                     ? now - dateB <= 30 * 24 * 60 * 60 * 1000 ? dateA - dateB : -1\r\n//                     : 1;\r\n//             } else {\r\n//                 return dateA - dateB;\r\n//             }\r\n//         });\r\n//         setSortedComplaints(sorted);\r\n//         setDropdownVisible(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"table-header\">\r\n//                 <div className=\"dropdown\">\r\n//                     <button onClick={toggleDropdown}>Sort</button>\r\n//                     {dropdownVisible && (\r\n//                         <div className=\"dropdown-menu\">\r\n//                             <div className=\"dropdown-item\" onClick={() => sortComplaints('week')}>Week</div>\r\n//                             <div className=\"dropdown-item\" onClick={() => sortComplaints('month')}>Month</div>\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//             </div>\r\n//             <table className=\"complaints-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Title</th>\r\n//                         <th>Issue</th>\r\n//                         <th>Location</th>\r\n//                         <th>Assigned Worker</th>\r\n//                         <th>Status</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {sortedComplaints.map((complaint, index) => (\r\n//                         <tr key={index}>\r\n//                             <td>{complaint.title}</td>\r\n//                             <td>{complaint.issue}</td>\r\n//                             <td>{complaint.location}</td>\r\n//                             <td>{complaint.assignedWorker}</td>\r\n//                             <td>{complaint.status}</td>\r\n//                             <td>\r\n//                                 {complaint.status === 'In Progress' && (\r\n//                                     <button onClick={() => markAsDone(index)}>Mark as Done</button>\r\n//                                 )}\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ComplaintsTable;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}