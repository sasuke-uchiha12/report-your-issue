{"ast":null,"code":"var _jsxFileName = \"D:\\\\Creative and innovative project\\\\report-your-issue\\\\frontend\\\\src\\\\component\\\\Dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport AdminHeader from './AdminHeader';\nimport AdminTable from './AdminTable';\n// import '../css/AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst AdminDashboard = () => {\n  _s();\n  const [complaints, setComplaints] = useState([]);\n  const [workers] = useState(['Worker 1', 'Worker 2', 'Worker 3', 'Worker 4', 'Worker 5', 'Worker 6', 'Worker 7', 'Worker 8', 'Worker 9']);\n  useEffect(() => {\n    fetchComplaints();\n    socket.on('complaintCreated', newComplaint => {\n      setComplaints(prevComplaints => [...prevComplaints, newComplaint]);\n    });\n    socket.on('complaintUpdated', updatedComplaint => {\n      setComplaints(prevComplaints => prevComplaints.map(complaint => complaint._id === updatedComplaint._id ? updatedComplaint : complaint));\n    });\n    return () => {\n      socket.off('complaintCreated');\n      socket.off('complaintUpdated');\n    };\n  }, []);\n  const fetchComplaints = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/complaints');\n      setComplaints(res.data);\n    } catch (error) {\n      console.error('There was an error fetching the complaints!', error);\n    }\n  };\n  const assignWorker = async (index, worker) => {\n    try {\n      const updatedComplaint = await axios.patch(`http://localhost:5000/api/complaints/assign/${complaints[index]._id}`, {\n        assignedWorker: worker\n      });\n      setComplaints(prevComplaints => prevComplaints.map((complaint, i) => i === index ? updatedComplaint.data : complaint));\n    } catch (error) {\n      console.error('There was an error assigning the worker!', error);\n    }\n  };\n  const updateStatus = async (index, status) => {\n    try {\n      const updatedComplaint = await axios.patch(`http://localhost:5000/api/complaints/status/${complaints[index]._id}`, {\n        status\n      });\n      setComplaints(prevComplaints => prevComplaints.map((complaint, i) => i === index ? updatedComplaint.data : complaint));\n    } catch (error) {\n      console.error('There was an error updating the status!', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AdminTable, {\n      complaints: complaints,\n      workers: workers,\n      assignWorker: assignWorker,\n      updateStatus: updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"4m2McjfOeH5I2+guyexOzo0v9uI=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","io","AdminHeader","AdminTable","jsxDEV","_jsxDEV","socket","AdminDashboard","_s","complaints","setComplaints","workers","fetchComplaints","on","newComplaint","prevComplaints","updatedComplaint","map","complaint","_id","off","res","get","data","error","console","assignWorker","index","worker","patch","assignedWorker","i","updateStatus","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Creative and innovative project/report-your-issue/frontend/src/component/Dashboard/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport AdminHeader from './AdminHeader';\r\nimport AdminTable from './AdminTable';\r\n// import '../css/AdminDashboard.css';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst AdminDashboard = () => {\r\n    const [complaints, setComplaints] = useState([]);\r\n    const [workers] = useState(['Worker 1', 'Worker 2', 'Worker 3', 'Worker 4', 'Worker 5', 'Worker 6', 'Worker 7', 'Worker 8', 'Worker 9']);\r\n\r\n    useEffect(() => {\r\n        fetchComplaints();\r\n        socket.on('complaintCreated', (newComplaint) => {\r\n            setComplaints((prevComplaints) => [...prevComplaints, newComplaint]);\r\n        });\r\n\r\n        socket.on('complaintUpdated', (updatedComplaint) => {\r\n            setComplaints((prevComplaints) => \r\n                prevComplaints.map((complaint) => \r\n                    complaint._id === updatedComplaint._id ? updatedComplaint : complaint\r\n                )\r\n            );\r\n        });\r\n\r\n        return () => {\r\n            socket.off('complaintCreated');\r\n            socket.off('complaintUpdated');\r\n        };\r\n    }, []);\r\n\r\n    const fetchComplaints = async () => {\r\n        try {\r\n            const res = await axios.get('http://localhost:5000/api/complaints');\r\n            setComplaints(res.data);\r\n        } catch (error) {\r\n            console.error('There was an error fetching the complaints!', error);\r\n        }\r\n    };\r\n\r\n    const assignWorker = async (index, worker) => {\r\n        try {\r\n            const updatedComplaint = await axios.patch(`http://localhost:5000/api/complaints/assign/${complaints[index]._id}`, { assignedWorker: worker });\r\n            setComplaints((prevComplaints) => \r\n                prevComplaints.map((complaint, i) => \r\n                    i === index ? updatedComplaint.data : complaint\r\n                )\r\n            );\r\n        } catch (error) {\r\n            console.error('There was an error assigning the worker!', error);\r\n        }\r\n    };\r\n\r\n    const updateStatus = async (index, status) => {\r\n        try {\r\n            const updatedComplaint = await axios.patch(`http://localhost:5000/api/complaints/status/${complaints[index]._id}`, { status });\r\n            setComplaints((prevComplaints) => \r\n                prevComplaints.map((complaint, i) => \r\n                    i === index ? updatedComplaint.data : complaint\r\n                )\r\n            );\r\n        } catch (error) {\r\n            console.error('There was an error updating the status!', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n            <AdminHeader />\r\n            <AdminTable \r\n                complaints={complaints} \r\n                workers={workers} \r\n                assignWorker={assignWorker} \r\n                updateStatus={updateStatus} \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;EAExIC,SAAS,CAAC,MAAM;IACZa,eAAe,CAAC,CAAC;IACjBN,MAAM,CAACO,EAAE,CAAC,kBAAkB,EAAGC,YAAY,IAAK;MAC5CJ,aAAa,CAAEK,cAAc,IAAK,CAAC,GAAGA,cAAc,EAAED,YAAY,CAAC,CAAC;IACxE,CAAC,CAAC;IAEFR,MAAM,CAACO,EAAE,CAAC,kBAAkB,EAAGG,gBAAgB,IAAK;MAChDN,aAAa,CAAEK,cAAc,IACzBA,cAAc,CAACE,GAAG,CAAEC,SAAS,IACzBA,SAAS,CAACC,GAAG,KAAKH,gBAAgB,CAACG,GAAG,GAAGH,gBAAgB,GAAGE,SAChE,CACJ,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,MAAM;MACTZ,MAAM,CAACc,GAAG,CAAC,kBAAkB,CAAC;MAC9Bd,MAAM,CAACc,GAAG,CAAC,kBAAkB,CAAC;IAClC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMR,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMS,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,sCAAsC,CAAC;MACnEZ,aAAa,CAACW,GAAG,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;IACvE;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,KAAK;IAC1C,IAAI;MACA,MAAMZ,gBAAgB,GAAG,MAAMhB,KAAK,CAAC6B,KAAK,CAAE,+CAA8CpB,UAAU,CAACkB,KAAK,CAAC,CAACR,GAAI,EAAC,EAAE;QAAEW,cAAc,EAAEF;MAAO,CAAC,CAAC;MAC9IlB,aAAa,CAAEK,cAAc,IACzBA,cAAc,CAACE,GAAG,CAAC,CAACC,SAAS,EAAEa,CAAC,KAC5BA,CAAC,KAAKJ,KAAK,GAAGX,gBAAgB,CAACO,IAAI,GAAGL,SAC1C,CACJ,CAAC;IACL,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IACpE;EACJ,CAAC;EAED,MAAMQ,YAAY,GAAG,MAAAA,CAAOL,KAAK,EAAEM,MAAM,KAAK;IAC1C,IAAI;MACA,MAAMjB,gBAAgB,GAAG,MAAMhB,KAAK,CAAC6B,KAAK,CAAE,+CAA8CpB,UAAU,CAACkB,KAAK,CAAC,CAACR,GAAI,EAAC,EAAE;QAAEc;MAAO,CAAC,CAAC;MAC9HvB,aAAa,CAAEK,cAAc,IACzBA,cAAc,CAACE,GAAG,CAAC,CAACC,SAAS,EAAEa,CAAC,KAC5BA,CAAC,KAAKJ,KAAK,GAAGX,gBAAgB,CAACO,IAAI,GAAGL,SAC1C,CACJ,CAAC;IACL,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACnE;EACJ,CAAC;EAED,oBACInB,OAAA;IAAK6B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5B9B,OAAA,CAACH,WAAW;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACflC,OAAA,CAACF,UAAU;MACPM,UAAU,EAAEA,UAAW;MACvBE,OAAO,EAAEA,OAAQ;MACjBe,YAAY,EAAEA,YAAa;MAC3BM,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAtEID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAwEpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}