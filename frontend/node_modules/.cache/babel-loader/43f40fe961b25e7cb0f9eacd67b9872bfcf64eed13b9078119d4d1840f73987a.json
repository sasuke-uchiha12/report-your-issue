{"ast":null,"code":"var _jsxFileName = \"D:\\\\Creative and innovative project\\\\report-your-issue\\\\src\\\\component\\\\form\\\\ComplaintForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/form/ComplaintForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ComplaintForm() {\n  _s();\n  const {\n    userTypes\n  } = useParams();\n  const [form, setForm] = useState({\n    identifier: '',\n    title: '',\n    issue: '',\n    location: '',\n    nature: '',\n    priority: '',\n    image: null\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleImageChange = e => {\n    setForm({\n      ...form,\n      image: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Construct form data to include the image file if it was uploaded\n    const formData = new FormData();\n    for (const key in form) {\n      formData.append(key, form[key]);\n    }\n\n    // Submit form logic here, replace URL with your server endpoint\n    // You might want to add form validation before submitting\n    try {\n      const response = await fetch('/api/complaints', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        // After submission, navigate to a confirmation page or dashboard\n        navigate('/dashboard');\n      } else {\n        console.error('Failed to submit form', await response.text());\n      }\n    } catch (error) {\n      console.error('Error submitting form', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"complaint-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [userType === 'student' ? 'Student' : 'Staff', \" Complaint Form\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageUpload\",\n          children: [\"Upload an image (optional):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            id: \"imageUpload\",\n            onChange: handleImageChange,\n            accept: \"image/*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(ComplaintForm, \"tkf/J/TQBbcV8eM0UNzSyGYx8Ec=\", true, function () {\n  return [useNavigate];\n});\n_c = ComplaintForm;\nexport default ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ComplaintForm","_s","userTypes","useParams","form","setForm","identifier","title","issue","location","nature","priority","image","navigate","handleChange","e","target","name","value","handleImageChange","files","handleSubmit","preventDefault","formData","FormData","key","append","response","fetch","method","body","ok","console","error","text","className","children","userType","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","encType","htmlFor","type","id","onChange","accept","_c","$RefreshReg$"],"sources":["D:/Creative and innovative project/report-your-issue/src/component/form/ComplaintForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../css/form/ComplaintForm.css';\r\n\r\nfunction ComplaintForm() {\r\n    const { userTypes } = useParams();\r\n    const [form, setForm] = useState({\r\n        identifier: '',\r\n        title: '',\r\n        issue: '',\r\n        location: '',\r\n        nature: '',\r\n        priority: '',\r\n        image: null\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        setForm({ ...form, image: e.target.files[0] });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Construct form data to include the image file if it was uploaded\r\n        const formData = new FormData();\r\n        for (const key in form) {\r\n            formData.append(key, form[key]);\r\n        }\r\n\r\n        // Submit form logic here, replace URL with your server endpoint\r\n        // You might want to add form validation before submitting\r\n        try {\r\n            const response = await fetch('/api/complaints', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (response.ok) {\r\n                // After submission, navigate to a confirmation page or dashboard\r\n                navigate('/dashboard');\r\n            } else {\r\n                console.error('Failed to submit form', await response.text());\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting form', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"complaint-form-container\">\r\n            <h2>{userType === 'student' ? 'Student' : 'Staff'} Complaint Form</h2>\r\n            <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                {/* ...other input fields... */}\r\n\r\n                <div>\r\n                    <label htmlFor=\"imageUpload\">\r\n                        Upload an image (optional):\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"image\"\r\n                            id=\"imageUpload\"\r\n                            onChange={handleImageChange}\r\n                            accept=\"image/*\"\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <button type=\"submit\">Submit Complaint</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ComplaintForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}