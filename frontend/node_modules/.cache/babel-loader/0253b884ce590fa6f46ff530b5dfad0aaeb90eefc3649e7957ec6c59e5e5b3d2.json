{"ast":null,"code":"var _jsxFileName = \"D:\\\\Creative and innovative project\\\\report-your-issue\\\\src\\\\component\\\\Dashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import ComplaintForm from '../ComplaintForm';\nimport ComplaintsTable from '../ComplaintsTable';\nimport DashHeader from '../DashHeader';\n// import './AdminDashboard.css'; // Assuming you have separate styles for the admin dashboard\n//this is sasuke\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [complaints, setComplaints] = useState([]);\n\n  // Function to handle assigning worker and updating status\n  const handleAssignWorkerAndStatus = (index, assignedWorker, status) => {\n    const updatedComplaints = [...complaints];\n    updatedComplaints[index].assignedWorker = assignedWorker;\n    updatedComplaints[index].status = status;\n    setComplaints(updatedComplaints);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DashHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Complaints (Admin Dashboard)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ComplaintsTable, {\n          complaints: complaints,\n          handleAssignWorkerAndStatus: handleAssignWorkerAndStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"5PN/eltch3M08wVd59EeckddA1Y=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","ComplaintsTable","DashHeader","jsxDEV","_jsxDEV","AdminDashboard","_s","complaints","setComplaints","handleAssignWorkerAndStatus","index","assignedWorker","status","updatedComplaints","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["D:/Creative and innovative project/report-your-issue/src/component/Dashboard/AdminDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// import ComplaintForm from '../ComplaintForm';\r\nimport ComplaintsTable from '../ComplaintsTable';\r\nimport DashHeader from '../DashHeader';\r\n// import './AdminDashboard.css'; // Assuming you have separate styles for the admin dashboard\r\n//this is sasuke\r\n\r\nconst AdminDashboard = () => {\r\n    const [complaints, setComplaints] = useState([]);\r\n\r\n    // Function to handle assigning worker and updating status\r\n    const handleAssignWorkerAndStatus = (index, assignedWorker, status) => {\r\n        const updatedComplaints = [...complaints];\r\n        updatedComplaints[index].assignedWorker = assignedWorker;\r\n        updatedComplaints[index].status = status;\r\n        setComplaints(updatedComplaints);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <DashHeader />\r\n            <div className=\"dashboard\">\r\n                <div className=\"dashboard-container\">\r\n                    <h1>Complaints (Admin Dashboard)</h1>\r\n                    <ComplaintsTable complaints={complaints} handleAssignWorkerAndStatus={handleAssignWorkerAndStatus} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,UAAU,MAAM,eAAe;AACtC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMS,2BAA2B,GAAGA,CAACC,KAAK,EAAEC,cAAc,EAAEC,MAAM,KAAK;IACnE,MAAMC,iBAAiB,GAAG,CAAC,GAAGN,UAAU,CAAC;IACzCM,iBAAiB,CAACH,KAAK,CAAC,CAACC,cAAc,GAAGA,cAAc;IACxDE,iBAAiB,CAACH,KAAK,CAAC,CAACE,MAAM,GAAGA,MAAM;IACxCJ,aAAa,CAACK,iBAAiB,CAAC;EACpC,CAAC;EAED,oBACIT,OAAA;IAAAU,QAAA,gBACIV,OAAA,CAACF,UAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdd,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAL,QAAA,eACtBV,OAAA;QAAKe,SAAS,EAAC,qBAAqB;QAAAL,QAAA,gBAChCV,OAAA;UAAAU,QAAA,EAAI;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCd,OAAA,CAACH,eAAe;UAACM,UAAU,EAAEA,UAAW;UAACE,2BAA2B,EAAEA;QAA4B;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAtBKD,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}