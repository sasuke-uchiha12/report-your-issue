{"ast":null,"code":"var _jsxFileName = \"D:\\\\Creative and innovative project\\\\report-your-issue\\\\frontend\\\\src\\\\component\\\\AdminTable.js\";\n// import React from 'react';\n// import '../css/AdminTable.css';\n\n// const AdminTable = ({ complaints, workers, assignWorker, updateStatus }) => {\n//     return (\n//         <div className=\"complaints-table-container\">\n//             <table className=\"complaints-table\">\n//                 <thead>\n//                     <tr>\n//                         {/* <th>Identifier</th> */}\n//                         <th>Title</th>\n//                         <th>Issue</th>\n//                         <th>Location</th>\n//                         <th>Assigned Worker</th>\n//                         <th>Status</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {complaints.map((complaint, index) => (\n//                         <tr key={index}>\n//                             {/* <td>{complaint.identifier}</td> */}\n//                             <td>{complaint.title}</td>\n//                             <td>{complaint.issue}</td>\n//                             <td>{complaint.location}</td>\n//                             <td>\n//                                 {complaint.assignedWorker || (\n//                                     <select onChange={(e) => assignWorker(index, e.target.value)} defaultValue=\"\">\n//                                         <option value=\"\" disabled>Select Worker</option>\n//                                         {workers.map((worker, i) => (\n//                                             <option key={i} value={worker}>{worker}</option>\n//                                         ))}\n//                                     </select>\n//                                 )}\n//                             </td>\n//                             <td>{complaint.status}</td>\n//                             <td>\n//                                 {complaint.status === 'Done' && (\n//                                     <button onClick={() => updateStatus(index, 'Completed')}>Verify and Mark as Completed</button>\n//                                 )}\n//                                 {complaint.status === 'In Progress' && (\n//                                     <button onClick={() => updateStatus(index, 'Pending')}>Revert to Pending</button>\n//                                 )}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default AdminTable;\n\nimport React from 'react';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport ComplaintPDF from './ComplaintPDF'; // Import the PDF document component\nimport '../css/AdminTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminTable = ({\n  complaints,\n  workers,\n  assignWorker,\n  updateStatus\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"complaints-table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"complaints-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Issue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assigned Worker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: complaints.map((complaint, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: complaint.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: complaint.issue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: complaint.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: complaint.assignedWorker || /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => assignWorker(index, e.target.value),\n              defaultValue: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Worker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this), workers.map((worker, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: worker,\n                children: worker\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: complaint.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [complaint.status === 'Done' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateStatus(index, 'Completed'),\n              children: \"Verify and Mark as Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), complaint.status === 'In Progress' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateStatus(index, 'Pending'),\n              children: \"Revert to Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n              document: /*#__PURE__*/_jsxDEV(ComplaintPDF, {\n                complaint: complaint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 47\n              }, this),\n              fileName: `complaint_${complaint._id}.pdf`,\n              children: ({\n                loading\n              }) => loading ? 'Generating PDF...' : 'Download PDF'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_c = AdminTable;\nexport default AdminTable;\nvar _c;\n$RefreshReg$(_c, \"AdminTable\");","map":{"version":3,"names":["React","PDFDownloadLink","ComplaintPDF","jsxDEV","_jsxDEV","AdminTable","complaints","workers","assignWorker","updateStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","complaint","index","title","issue","location","assignedWorker","onChange","e","target","value","defaultValue","disabled","worker","i","status","onClick","document","_id","loading","_c","$RefreshReg$"],"sources":["D:/Creative and innovative project/report-your-issue/frontend/src/component/AdminTable.js"],"sourcesContent":["// import React from 'react';\r\n// import '../css/AdminTable.css';\r\n\r\n// const AdminTable = ({ complaints, workers, assignWorker, updateStatus }) => {\r\n//     return (\r\n//         <div className=\"complaints-table-container\">\r\n//             <table className=\"complaints-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         {/* <th>Identifier</th> */}\r\n//                         <th>Title</th>\r\n//                         <th>Issue</th>\r\n//                         <th>Location</th>\r\n//                         <th>Assigned Worker</th>\r\n//                         <th>Status</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {complaints.map((complaint, index) => (\r\n//                         <tr key={index}>\r\n//                             {/* <td>{complaint.identifier}</td> */}\r\n//                             <td>{complaint.title}</td>\r\n//                             <td>{complaint.issue}</td>\r\n//                             <td>{complaint.location}</td>\r\n//                             <td>\r\n//                                 {complaint.assignedWorker || (\r\n//                                     <select onChange={(e) => assignWorker(index, e.target.value)} defaultValue=\"\">\r\n//                                         <option value=\"\" disabled>Select Worker</option>\r\n//                                         {workers.map((worker, i) => (\r\n//                                             <option key={i} value={worker}>{worker}</option>\r\n//                                         ))}\r\n//                                     </select>\r\n//                                 )}\r\n//                             </td>\r\n//                             <td>{complaint.status}</td>\r\n//                             <td>\r\n//                                 {complaint.status === 'Done' && (\r\n//                                     <button onClick={() => updateStatus(index, 'Completed')}>Verify and Mark as Completed</button>\r\n//                                 )}\r\n//                                 {complaint.status === 'In Progress' && (\r\n//                                     <button onClick={() => updateStatus(index, 'Pending')}>Revert to Pending</button>\r\n//                                 )}\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AdminTable;\r\n\r\nimport React from 'react';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport ComplaintPDF from './ComplaintPDF'; // Import the PDF document component\r\nimport '../css/AdminTable.css';\r\n\r\nconst AdminTable = ({ complaints, workers, assignWorker, updateStatus }) => {\r\n    return (\r\n        <div className=\"complaints-table-container\">\r\n            <table className=\"complaints-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Issue</th>\r\n                        <th>Location</th>\r\n                        <th>Assigned Worker</th>\r\n                        <th>Status</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {complaints.map((complaint, index) => (\r\n                        <tr key={index}>\r\n                            <td>{complaint.title}</td>\r\n                            <td>{complaint.issue}</td>\r\n                            <td>{complaint.location}</td>\r\n                            <td>\r\n                                {complaint.assignedWorker || (\r\n                                    <select onChange={(e) => assignWorker(index, e.target.value)} defaultValue=\"\">\r\n                                        <option value=\"\" disabled>Select Worker</option>\r\n                                        {workers.map((worker, i) => (\r\n                                            <option key={i} value={worker}>{worker}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                )}\r\n                            </td>\r\n                            <td>{complaint.status}</td>\r\n                            <td>\r\n                                {complaint.status === 'Done' && (\r\n                                    <button onClick={() => updateStatus(index, 'Completed')}>Verify and Mark as Completed</button>\r\n                                )}\r\n                                {complaint.status === 'In Progress' && (\r\n                                    <button onClick={() => updateStatus(index, 'Pending')}>Revert to Pending</button>\r\n                                )}\r\n                                <PDFDownloadLink\r\n                                    document={<ComplaintPDF complaint={complaint} />}\r\n                                    fileName={`complaint_${complaint._id}.pdf`}\r\n                                >\r\n                                    {({ loading }) => (loading ? 'Generating PDF...' : 'Download PDF')}\r\n                                </PDFDownloadLink>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}