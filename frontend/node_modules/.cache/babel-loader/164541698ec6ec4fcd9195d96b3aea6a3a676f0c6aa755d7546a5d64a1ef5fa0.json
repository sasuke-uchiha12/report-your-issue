{"ast":null,"code":"// // import React, { useState, useEffect } from 'react';\n// // import ComplaintForm from '../ComplaintForm';\n// // import ComplaintsTable from '../ComplaintsTable';\n// // import DashHeader from '../DashHeader';\n// // import axios from 'axios';\n// // import './DepartmentDashboard.css';\n// // import io from 'socket.io-client';\n\n// // const socket = io('http://localhost:5000');\n\n// // const DepartmentDashboard = () => {\n// //     const [showForm, setShowForm] = useState(false);\n// //     const [complaints, setComplaints] = useState([]);\n\n// //     useEffect(() => {\n// //         fetchComplaints();\n// //         socket.on('complaintCreated', (newComplaint) => {\n// //             setComplaints((prevComplaints) => [...prevComplaints, newComplaint]);\n// //         });\n\n// //         socket.on('complaintUpdated', (updatedComplaint) => {\n// //             setComplaints((prevComplaints) => \n// //                 prevComplaints.map((complaint) => \n// //                     complaint._id === updatedComplaint._id ? updatedComplaint : complaint\n// //                 )\n// //             );\n// //         });\n\n// //         return () => {\n// //             socket.off('complaintCreated');\n// //             socket.off('complaintUpdated');\n// //         };\n// //     }, []);\n\n// //     const fetchComplaints = async () => {\n// //         try {\n// //             const res = await axios.get('http://localhost:5000/api/complaints');\n// //             setComplaints(res.data);\n// //         } catch (error) {\n// //             console.error('There was an error fetching the complaints!', error);\n// //         }\n// //     };\n\n// //     const handleFormSubmit = (newComplaint) => {\n// //         setComplaints([...complaints, newComplaint]);\n// //         setShowForm(false);\n// //     };\n\n// //     const markAsDone = async (index) => {\n// //         try {\n// //             const updatedComplaint = { ...complaints[index], status: 'Done' };\n// //             await axios.patch(`http://localhost:5000/api/complaints/mark-done/${complaints[index]._id}`, updatedComplaint);\n// //         } catch (error) {\n// //             console.error('There was an error updating the complaint!', error);\n// //         }\n// //     };\n\n// //     const toggleFormVisibility = () => {\n// //         setShowForm(!showForm);\n// //     };\n\n// //     const handleOverlayClick = (e) => {\n// //         if (e.target === e.currentTarget) {\n// //             setShowForm(false);\n// //         }\n// //     };\n\n// //     return (\n// //         <div>\n// //             <DashHeader />\n// //             <div className={`dashboard ${showForm ? 'overlay-active' : ''}`}>\n// //                 {showForm && (\n// //                     <div className=\"form-overlay\" onClick={handleOverlayClick}>\n// //                         <div className=\"form-container\" onClick={(e) => e.stopPropagation()}>\n// //                             <ComplaintForm onSubmit={handleFormSubmit} />\n// //                         </div>\n// //                     </div>\n// //                 )}\n// //                 <div className=\"dashboard-container\">\n// //                     <div className=\"dashboard-header\">\n// //                         <h1>Complaints</h1>\n// //                         <button onClick={toggleFormVisibility}>Add New Complaint</button>\n// //                     </div>\n// //                     <ComplaintsTable complaints={complaints} markAsDone={markAsDone} />\n// //                 </div>\n// //             </div>\n// //         </div>\n// //     );\n// // };\n\n// // export default DepartmentDashboard;\n\n// import React, { useState, useEffect } from 'react';\n// import ComplaintForm from '../ComplaintForm';\n// import ComplaintsTable from '../ComplaintsTable';\n// import DashHeader from '../DashHeader';\n// import axios from 'axios';\n// import './DepartmentDashboard.css';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:5000');\n\n// const DepartmentDashboard = () => {\n//     const [showForm, setShowForm] = useState(false);\n//     const [complaints, setComplaints] = useState([]);\n\n//     useEffect(() => {\n//         fetchComplaints();\n//         socket.on('complaintCreated', (newComplaint) => {\n//             setComplaints((prevComplaints) => [...prevComplaints, newComplaint]);\n//         });\n\n//         socket.on('complaintUpdated', (updatedComplaint) => {\n//             setComplaints((prevComplaints) => \n//                 prevComplaints.map((complaint) => \n//                     complaint._id === updatedComplaint._id ? updatedComplaint : complaint\n//                 )\n//             );\n//         });\n\n//         return () => {\n//             socket.off('complaintCreated');\n//             socket.off('complaintUpdated');\n//         };\n//     }, []);\n\n//     const fetchComplaints = async () => {\n//         try {\n//             const res = await axios.get('http://localhost:5000/api/complaints');\n//             setComplaints(res.data);\n//         } catch (error) {\n//             console.error('There was an error fetching the complaints!', error);\n//         }\n//     };\n\n//     const handleFormSubmit = (newComplaint) => {\n//         setComplaints([...complaints, newComplaint]);\n//         setShowForm(false);\n//     };\n\n//     const markAsDone = async (index) => {\n//         try {\n//             const updatedComplaint = { ...complaints[index], status: 'Done' };\n//             await axios.patch(`http://localhost:5000/api/complaints/mark-done/${complaints[index]._id}`, updatedComplaint);\n//         } catch (error) {\n//             console.error('There was an error updating the complaint!', error);\n//         }\n//     };\n\n//     const toggleFormVisibility = () => {\n//         setShowForm(!showForm);\n//     };\n\n//     const handleOverlayClick = (e) => {\n//         if (e.target === e.currentTarget) {\n//             setShowForm(false);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <DashHeader />\n//             <div className={`dashboard ${showForm ? 'overlay-active' : ''}`}>\n//                 {showForm && (\n//                     <div className=\"form-overlay\" onClick={handleOverlayClick}>\n//                         <div className=\"form-container\" onClick={(e) => e.stopPropagation()}>\n//                             <ComplaintForm onSubmit={handleFormSubmit} />\n//                         </div>\n//                     </div>\n//                 )}\n//                 <div className=\"dashboard-container\">\n//                     <div className=\"dashboard-header\">\n//                         <div>\n//                             <button onClick={toggleFormVisibility}>Add New Complaint</button>\n//                         </div>\n//                     </div>\n//                     <ComplaintsTable complaints={complaints} markAsDone={markAsDone} />\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default DepartmentDashboard;","map":{"version":3,"names":[],"sources":["D:/Creative and innovative project/report-your-issue/frontend/src/component/Dashboard/DepartmentDashboard.js"],"sourcesContent":["// // import React, { useState, useEffect } from 'react';\r\n// // import ComplaintForm from '../ComplaintForm';\r\n// // import ComplaintsTable from '../ComplaintsTable';\r\n// // import DashHeader from '../DashHeader';\r\n// // import axios from 'axios';\r\n// // import './DepartmentDashboard.css';\r\n// // import io from 'socket.io-client';\r\n\r\n// // const socket = io('http://localhost:5000');\r\n\r\n// // const DepartmentDashboard = () => {\r\n// //     const [showForm, setShowForm] = useState(false);\r\n// //     const [complaints, setComplaints] = useState([]);\r\n\r\n// //     useEffect(() => {\r\n// //         fetchComplaints();\r\n// //         socket.on('complaintCreated', (newComplaint) => {\r\n// //             setComplaints((prevComplaints) => [...prevComplaints, newComplaint]);\r\n// //         });\r\n\r\n// //         socket.on('complaintUpdated', (updatedComplaint) => {\r\n// //             setComplaints((prevComplaints) => \r\n// //                 prevComplaints.map((complaint) => \r\n// //                     complaint._id === updatedComplaint._id ? updatedComplaint : complaint\r\n// //                 )\r\n// //             );\r\n// //         });\r\n\r\n// //         return () => {\r\n// //             socket.off('complaintCreated');\r\n// //             socket.off('complaintUpdated');\r\n// //         };\r\n// //     }, []);\r\n\r\n// //     const fetchComplaints = async () => {\r\n// //         try {\r\n// //             const res = await axios.get('http://localhost:5000/api/complaints');\r\n// //             setComplaints(res.data);\r\n// //         } catch (error) {\r\n// //             console.error('There was an error fetching the complaints!', error);\r\n// //         }\r\n// //     };\r\n\r\n// //     const handleFormSubmit = (newComplaint) => {\r\n// //         setComplaints([...complaints, newComplaint]);\r\n// //         setShowForm(false);\r\n// //     };\r\n\r\n// //     const markAsDone = async (index) => {\r\n// //         try {\r\n// //             const updatedComplaint = { ...complaints[index], status: 'Done' };\r\n// //             await axios.patch(`http://localhost:5000/api/complaints/mark-done/${complaints[index]._id}`, updatedComplaint);\r\n// //         } catch (error) {\r\n// //             console.error('There was an error updating the complaint!', error);\r\n// //         }\r\n// //     };\r\n\r\n// //     const toggleFormVisibility = () => {\r\n// //         setShowForm(!showForm);\r\n// //     };\r\n\r\n// //     const handleOverlayClick = (e) => {\r\n// //         if (e.target === e.currentTarget) {\r\n// //             setShowForm(false);\r\n// //         }\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div>\r\n// //             <DashHeader />\r\n// //             <div className={`dashboard ${showForm ? 'overlay-active' : ''}`}>\r\n// //                 {showForm && (\r\n// //                     <div className=\"form-overlay\" onClick={handleOverlayClick}>\r\n// //                         <div className=\"form-container\" onClick={(e) => e.stopPropagation()}>\r\n// //                             <ComplaintForm onSubmit={handleFormSubmit} />\r\n// //                         </div>\r\n// //                     </div>\r\n// //                 )}\r\n// //                 <div className=\"dashboard-container\">\r\n// //                     <div className=\"dashboard-header\">\r\n// //                         <h1>Complaints</h1>\r\n// //                         <button onClick={toggleFormVisibility}>Add New Complaint</button>\r\n// //                     </div>\r\n// //                     <ComplaintsTable complaints={complaints} markAsDone={markAsDone} />\r\n// //                 </div>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default DepartmentDashboard;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import ComplaintForm from '../ComplaintForm';\r\n// import ComplaintsTable from '../ComplaintsTable';\r\n// import DashHeader from '../DashHeader';\r\n// import axios from 'axios';\r\n// import './DepartmentDashboard.css';\r\n// import io from 'socket.io-client';\r\n\r\n// const socket = io('http://localhost:5000');\r\n\r\n// const DepartmentDashboard = () => {\r\n//     const [showForm, setShowForm] = useState(false);\r\n//     const [complaints, setComplaints] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         fetchComplaints();\r\n//         socket.on('complaintCreated', (newComplaint) => {\r\n//             setComplaints((prevComplaints) => [...prevComplaints, newComplaint]);\r\n//         });\r\n\r\n//         socket.on('complaintUpdated', (updatedComplaint) => {\r\n//             setComplaints((prevComplaints) => \r\n//                 prevComplaints.map((complaint) => \r\n//                     complaint._id === updatedComplaint._id ? updatedComplaint : complaint\r\n//                 )\r\n//             );\r\n//         });\r\n\r\n//         return () => {\r\n//             socket.off('complaintCreated');\r\n//             socket.off('complaintUpdated');\r\n//         };\r\n//     }, []);\r\n\r\n//     const fetchComplaints = async () => {\r\n//         try {\r\n//             const res = await axios.get('http://localhost:5000/api/complaints');\r\n//             setComplaints(res.data);\r\n//         } catch (error) {\r\n//             console.error('There was an error fetching the complaints!', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleFormSubmit = (newComplaint) => {\r\n//         setComplaints([...complaints, newComplaint]);\r\n//         setShowForm(false);\r\n//     };\r\n\r\n//     const markAsDone = async (index) => {\r\n//         try {\r\n//             const updatedComplaint = { ...complaints[index], status: 'Done' };\r\n//             await axios.patch(`http://localhost:5000/api/complaints/mark-done/${complaints[index]._id}`, updatedComplaint);\r\n//         } catch (error) {\r\n//             console.error('There was an error updating the complaint!', error);\r\n//         }\r\n//     };\r\n\r\n//     const toggleFormVisibility = () => {\r\n//         setShowForm(!showForm);\r\n//     };\r\n\r\n//     const handleOverlayClick = (e) => {\r\n//         if (e.target === e.currentTarget) {\r\n//             setShowForm(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <DashHeader />\r\n//             <div className={`dashboard ${showForm ? 'overlay-active' : ''}`}>\r\n//                 {showForm && (\r\n//                     <div className=\"form-overlay\" onClick={handleOverlayClick}>\r\n//                         <div className=\"form-container\" onClick={(e) => e.stopPropagation()}>\r\n//                             <ComplaintForm onSubmit={handleFormSubmit} />\r\n//                         </div>\r\n//                     </div>\r\n//                 )}\r\n//                 <div className=\"dashboard-container\">\r\n//                     <div className=\"dashboard-header\">\r\n//                         <div>\r\n//                             <button onClick={toggleFormVisibility}>Add New Complaint</button>\r\n//                         </div>\r\n//                     </div>\r\n//                     <ComplaintsTable complaints={complaints} markAsDone={markAsDone} />\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default DepartmentDashboard;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}